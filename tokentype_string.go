// Code generated by "stringer -type TokenType -linecomment"; DO NOT EDIT.

package main

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TEOF-0]
	_ = x[TComment-1]
	_ = x[TSpace-2]
	_ = x[TNewline-3]
	_ = x[TBackslash-4]
	_ = x[TSemi-5]
	_ = x[TComma-6]
	_ = x[TLParen-7]
	_ = x[TRParen-8]
	_ = x[TLSquare-9]
	_ = x[TRSquare-10]
	_ = x[TLBrace-11]
	_ = x[TRBrace-12]
	_ = x[TIdent-13]
	_ = x[TType-14]
	_ = x[TString-15]
	_ = x[TRune-16]
	_ = x[TFloat-17]
	_ = x[TInteger-18]
	_ = x[TMadd-19]
	_ = x[TMsub-20]
	_ = x[TMmul-21]
	_ = x[TMdiv-22]
	_ = x[TMmod-23]
	_ = x[TMor-24]
	_ = x[TMxor-25]
	_ = x[TMand-26]
	_ = x[TMshl-27]
	_ = x[TMshr-28]
	_ = x[TMland-29]
	_ = x[TMlor-30]
	_ = x[TIncr-31]
	_ = x[TDecr-32]
	_ = x[TShl-33]
	_ = x[TShr-34]
	_ = x[TLand-35]
	_ = x[TLor-36]
	_ = x[TCeq-37]
	_ = x[TCne-38]
	_ = x[TCle-39]
	_ = x[TCge-40]
	_ = x[TEquals-41]
	_ = x[TPlus-42]
	_ = x[TMinus-43]
	_ = x[TAster-44]
	_ = x[TSlash-45]
	_ = x[TPerc-46]
	_ = x[TExcl-47]
	_ = x[TPipe-48]
	_ = x[TCaret-49]
	_ = x[TAmp-50]
	_ = x[TLess-51]
	_ = x[TGreater-52]
	_ = x[TDot-53]
	_ = x[TInvalid-54]
	_ = x[LexTokenMax-55]
	_ = x[TKeywordStart-56]
	_ = x[TKelse-57]
	_ = x[TKextern-58]
	_ = x[TKfn-59]
	_ = x[TKfor-60]
	_ = x[TKif-61]
	_ = x[TKns-62]
	_ = x[TKpub-63]
	_ = x[TKreturn-64]
	_ = x[TKstruct-65]
	_ = x[TKtype-66]
	_ = x[TKunion-67]
	_ = x[TKvar-68]
	_ = x[TKvariadic-69]
	_ = x[TKeywordEnd-70]
}

const _TokenType_name = "end of filecommentwhitespacenewline'\\'';'',''('')''['']''{''}'identifiertype namestring literalcharacter literalfloat literalinteger literal'+=''-=''*=''/=''%=''|=''^=''&=''<<=''>>=''&&=''||=''++''--''<<''>>''&&''||''==''!=''<=''>=''=''+''-''*''/''%''!''|''^''&''<''>''.'invalid tokenLexTokenMaxTKeywordStart'else''extern''fn''for''if''ns''pub''return''struct''type''union''var''variadic'TKeywordEnd"

var _TokenType_index = [...]uint16{0, 11, 18, 28, 35, 38, 41, 44, 47, 50, 53, 56, 59, 62, 72, 81, 95, 112, 125, 140, 144, 148, 152, 156, 160, 164, 168, 172, 177, 182, 187, 192, 196, 200, 204, 208, 212, 216, 220, 224, 228, 232, 235, 238, 241, 244, 247, 250, 253, 256, 259, 262, 265, 268, 271, 284, 295, 308, 314, 322, 326, 331, 335, 339, 344, 352, 360, 366, 373, 378, 388, 399}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
