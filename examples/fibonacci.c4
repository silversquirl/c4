fn fib(n U64) U64 {
	var a, b U64
	a = 0
	b = 1
	for ; n; n -= 1 {
		var c U64
		c = a + b
		a = b
		b = c
	}
	return a
}

variadic fn printf(fmt [I8]) I32
fn atol(a [I8]) U64 // This signature is a lie but no casts yet
pub fn main(argc I32, argv [[I8]]) I32 {
	var count U64
	if argc > 1 {
		count = atol([argv + 1])
	} else {
		count = 10
	}

	_ = printf("%dth fib = %d\n", count, fib(count))
	return 0
}
