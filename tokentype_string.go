// Code generated by "stringer -type TokenType -linecomment"; DO NOT EDIT.

package main

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TEOF-0]
	_ = x[TComment-1]
	_ = x[TSpace-2]
	_ = x[TNewline-3]
	_ = x[TBackslash-4]
	_ = x[TSemi-5]
	_ = x[TComma-6]
	_ = x[TLParen-7]
	_ = x[TRParen-8]
	_ = x[TLSquare-9]
	_ = x[TRSquare-10]
	_ = x[TLBrace-11]
	_ = x[TRBrace-12]
	_ = x[TIdent-13]
	_ = x[TType-14]
	_ = x[TString-15]
	_ = x[TFloat-16]
	_ = x[TInteger-17]
	_ = x[TShl-18]
	_ = x[TShr-19]
	_ = x[TLand-20]
	_ = x[TLor-21]
	_ = x[TCeq-22]
	_ = x[TCne-23]
	_ = x[TCle-24]
	_ = x[TCge-25]
	_ = x[TEquals-26]
	_ = x[TPlus-27]
	_ = x[TMinus-28]
	_ = x[TAster-29]
	_ = x[TSlash-30]
	_ = x[TPerc-31]
	_ = x[TExcl-32]
	_ = x[TPipe-33]
	_ = x[TCaret-34]
	_ = x[TAmp-35]
	_ = x[TLess-36]
	_ = x[TGreater-37]
	_ = x[TInvalid-38]
	_ = x[LexTokenMax-39]
	_ = x[TKeywordStart-40]
	_ = x[TKelse-41]
	_ = x[TKextern-42]
	_ = x[TKfn-43]
	_ = x[TKfor-44]
	_ = x[TKif-45]
	_ = x[TKpub-46]
	_ = x[TKreturn-47]
	_ = x[TKtype-48]
	_ = x[TKvar-49]
	_ = x[TKeywordEnd-50]
}

const _TokenType_name = "end of filecommentwhitespacenewline'\\'';'',''('')''['']''{''}'identifiertype namestring literalfloat literalinteger literal'<<''>>''&&''||''==''!=''<=''>=''=''+''-''*''/''%''!''|''^''&''<''>'invalid tokenLexTokenMaxTKeywordStart'else''extern''fn''for''if''pub''return''type''var'TKeywordEnd"

var _TokenType_index = [...]uint16{0, 11, 18, 28, 35, 38, 41, 44, 47, 50, 53, 56, 59, 62, 72, 81, 95, 108, 123, 127, 131, 135, 139, 143, 147, 151, 155, 158, 161, 164, 167, 170, 173, 176, 179, 182, 185, 188, 191, 204, 215, 228, 234, 242, 246, 251, 255, 260, 268, 274, 279, 290}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
